<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ILLinkBuild Condition=" $(Configuration.StartsWith('illink')) ">true</ILLinkBuild>
    <ILLinkBuild Condition=" '$(ILLinkBuild)' == '' ">false</ILLinkBuild>
  </PropertyGroup>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" Condition=" $(ILLinkBuild) " />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.50727</ProductVersion>
    <ProjectGuid>{400A1561-B6B6-482D-9E4C-3DDAEDE5BD07}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <AssemblyName>Mono.Linker.Tests</AssemblyName>
    <StartupObject>
    </StartupObject>
    <TargetFramework Condition=" $(ILLinkBuild) ">netcoreapp3.0</TargetFramework>
    <EnableDefaultCompileItems Condition=" $(ILLinkBuild) ">false</EnableDefaultCompileItems>
    <TargetFrameworkVersion Condition=" ! $(ILLinkBuild) ">v4.7.1</TargetFrameworkVersion>
    <!-- Simulate https://github.com/dotnet/sdk/pull/2073 until it ships. -->
    <DefineConstants Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">$(DefineConstants);NETCOREAPP</DefineConstants>
    <DefineConstants Condition=" $(ILLinkBuild) ">$(DefineConstants);ILLINK</DefineConstants>
    <DefineConstants Condition=" '$(Configuration)' == 'illink_Debug' ">$(DefineConstants);DEBUG</DefineConstants>
    <DefineConstants Condition=" '$(ArcadeBuild)' == 'true' ">$(DefineConstants);ARCADE</DefineConstants>
    <IsTestProject Condition=" $(ILLinkBuild) ">true</IsTestProject>
    <!-- Arcade's custom test imports assume that we are using xunit. -->
    <DisableArcadeTestFramework Condition=" '$(ArcadeBuild)' == 'true' ">true</DisableArcadeTestFramework>
    <RootNamespace>Mono.Linker.Tests</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin/Debug/</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin/Release/</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" Condition=" ! $(ILLinkBuild) " />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <ItemGroup Condition=" ! $(ILLinkBuild) ">
    <Reference Include="System" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Core" />
    <Reference Include="nunit.framework, Version=2.6.4.14350, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\external\NUnit\bin\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\external\cecil\Mono.Cecil.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil.Pdb">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\external\cecil\Mono.Cecil.Pdb.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil.Mdb">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\external\cecil\Mono.Cecil.Mdb.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
    <Folder Include="TestCasesRunner\" />
    <Folder Include="Extensions\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\linker\Mono.Linker.csproj">
      <Project>{DD28E2B1-057B-4B4D-A04D-B2EBD9E76E46}</Project>
      <Name>Mono.Linker</Name>
    </ProjectReference>
    <ProjectReference Include="..\Mono.Linker.Tests.Cases\Mono.Linker.Tests.Cases.csproj">
      <Project>{B6BEE6AA-ADA0-4E1D-9A17-FBF2936F82B5}</Project>
      <Name>Mono.Linker.Tests.Cases</Name>
    </ProjectReference>
    <ProjectReference Include="..\Mono.Linker.Tests.Cases.Expectations\Mono.Linker.Tests.Cases.Expectations.csproj">
      <Project>{2C26601F-3E2F-45B9-A02F-58EE9296E19E}</Project>
      <Name>Mono.Linker.Tests.Cases.Expectations</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="TestCasesRunner\CompilerOptions.cs" />
    <Compile Include="TestCasesRunner\FormattingUtils.cs" />
    <Compile Include="TestCasesRunner\ILCompiler.cs" />
    <Compile Include="TestCasesRunner\SourceAndDestinationPair.cs" />
    <Compile Include="TestCasesRunner\SetupCompileInfo.cs" />
    <Compile Include="TestCasesRunner\PeVerifier.cs" />
    <Compile Include="TestCasesRunner\TestCaseAssemblyResolver.cs" />
    <Compile Include="TestCases\IndividualTests.cs" />
    <Compile Include="TestCases\TestSuites.cs" />
    <Compile Include="TestCases\TestDatabase.cs" />
    <Compile Include="Tests\PreserveActionComparisonTests.cs" />
    <Compile Include="TestCasesRunner\LinkXmlHelpers.cs" />
    <Compile Include="TestCasesRunner\LinkedTestCaseResult.cs" />
    <Compile Include="TestCasesRunner\ManagedCompilationResult.cs" />
    <Compile Include="TestCasesRunner\TestCaseCollector.cs" />
    <Compile Include="TestCasesRunner\TestCaseLinkerOptions.cs" />
    <Compile Include="TestCasesRunner\TestRunner.cs" />
    <Compile Include="TestCases\TestCase.cs" />
    <Compile Include="Extensions\NiceIO.cs" />
    <Compile Include="Extensions\CecilExtensions.cs" />
    <Compile Include="TestCasesRunner\ExpectationsProvider.cs" />
    <Compile Include="TestCasesRunner\AssemblyChecker.cs" />
    <Compile Include="TestCasesRunner\LinkerArgumentBuilder.cs" />
    <Compile Include="TestCasesRunner\LinkerDriver.cs" />
    <Compile Include="TestCasesRunner\ObjectFactory.cs" />
    <Compile Include="TestCasesRunner\ResultChecker.cs" />
    <Compile Include="TestCasesRunner\TestCaseCompiler.cs" />
    <Compile Include="TestCasesRunner\TestCaseMetadaProvider.cs" />
    <Compile Include="TestCasesRunner\TestCaseSandbox.cs" />
    <Compile Include="Tests\TypeNameParserTests.cs" />
    <Compile Include="Tests\ParseResponseFileLinesTests.cs" />
  </ItemGroup>
  <Target Name="PrepareTools"
          BeforeTargets="Build"
          Condition=" $(ILLinkBuild) ">
    <!-- Restore ilasm using ilasm.ilproj. Restore must be done
         separately from copy with a different set of input
         properties, to force MSBuild to re-evaluate using new props
         and targets from the restored package. -->
    <PropertyGroup>
      <IlasmProject>$(MSBuildThisFileDirectory)../../eng/ilasm.ilproj</IlasmProject>
      <IlasmDir Condition=" '$(ArcadeBuild)' == 'true' ">$(ArtifactsDir)tools</IlasmDir>
      <IlasmDir Condition=" '$(ArcadeBuild)' != 'true' ">$(MSBuildThisFileDirectory)$(BaseIntermediateOutputPath)tools</IlasmDir>
    </PropertyGroup>

    <MSBuild Projects="$(IlasmProject)" Targets="Restore" Properties="BaseIntermediateOutputPath=$(IlasmDir)" />
    <MSBuild Projects="$(IlasmProject)" Targets="CopyILAsmTool" Properties="BaseIntermediateOutputPath=$(IlasmDir);__BuildPhase=Copy" />
  </Target>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition=" $(ILLinkBuild) " />
</Project>
